@model PImage.Category.Client.Web.Models.CategoryViewModel

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Categoria</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Category.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Category.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.Slug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>

     
        <table class="table">
            <tr>
                <th>
                    @{
                        var subCat = new PImage.Category.DTO.SubCategory();
                        if (Model.SubCategories.Count > 0)
                        {
                            Html.DisplayNameFor(sub => this.Model.SubCategories[0].Description);
                        }
                    }
                </th>
                <th>
                    @{
                        if (Model.SubCategories.Count > 0)
                        {
                            Html.DisplayNameFor(sub => subCat.Slug);
                        }
                    }
                </th>
                <th>

                </th>
            </tr>

            @foreach(var subCategory in this.Model.SubCategories)
            {
                <tr>
                    <td>
                        @this.Html.DisplayFor(modelItem => subCategory.Description)
                    </td>
                    <td>
                        @this.Html.DisplayFor(modelItem => subCategory.Slug)
                    </td>
                    <td>
                        @this.Html.ActionLink("Editar", "Edit", "SubCategories", new { id = subCategory.Id }, new { style = "text-decoration:underline" }) |
                        @this.Html.ActionLink("Detalhes", "Details", "SubCategories", new { id = subCategory.Id }, new { style = "text-decoration:underline" }) |
                        @this.Html.ActionLink("Excluir", "Delete", "SubCategories", new { id = subCategory.Id }, new { style = "text-decoration:underline" })
                    </td>
                </tr>
            }

            <tr>
                <td colspan="3">
                    @this.Html.ActionLink("Nova Subcategoria", "Create", "SubCategories", new { id = this.Model.Category.Id }, new { style = "text-decoration:underline" })
                </td>
            </tr>

        </table>
    

}

<div>
    @Html.ActionLink("Voltar para a lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
